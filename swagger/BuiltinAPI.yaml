swagger: '2.0'

info:
  version: 0.0.0.1
  title: Project Limitless Builtin API
  license:
    name: Apache 2.0
    url: https://github.com/ProjectLimitless/ProjectLimitless/blob/master/LICENSE
  description: This specification defines the builtin API available for Project Limitless installations.

schemes:
  - http
  - https

consumes:
  - application/json

produces:
  - application/json

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

basePath: /api
paths:
  /login:
    post:
      summary: Logs a user in
      parameters:
        - name: credentials
          in: body
          description: The login credentials to use.
          required: true
          schema:
            $ref: "#/definitions/Login.Credentials"
      responses:
        200:
          description: Login succeeded
          schema:
              $ref: "#/definitions/Login.Response"
          examples:
            application/json:
              {
                  "claims": [],
                  "userName": "Username",
                  "name": "Name",
                  "surname": "Surname",
                  "accessToken": "access token",
                  "isAuthenticated": true
              }
        401:
          description: Login failed
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Exception"
          examples:
            application/json:
              {
                "type": "System.MissingFie...",
                "message": "Username and password...",
                "stackTrace": "  at Limitless.Limitless...",
                "target": "ProjectLimitless..."
              }
  /admin/routes:
    get:
      summary: Returns a list of available API routes.
      security:
        - Bearer: []
      responses:
        200:
          description: The list of API routes
          schema:
            type: array
            items:
              $ref: "#/definitions/APIRoute"
          examples:
            application/json:
              [
                {
                  "path": "/api/login",
                  "method": "POST",
                  "description": "Log a user in",
                  "requiresAuthentication": false
                }
              ]
        401:
          description: Invalid or expired access token
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Exception"
          examples:
            application/json:
              {
                "type": "System.MissingFie...",
                "message": "Username and password...",
                "stackTrace": "  at Limitless.Limitless...",
                "target": "ProjectLimitless..."
              }
              
  /admin/modules:
    get:
      summary: Returns a list of loaded modules.
      security:
        - Bearer: []
      responses:
        200:
          description: The list of loaded modules
          schema:
            type: array
            items:
              $ref: "#/definitions/IModule"
          examples:
            application/json:
              [
                {
                  "type": "ILogger",
                  "title": "Limitless.Logger",
                  "author": "Project Limitless",
                  "version": "1.0.0.0",
                  "description": "An NLog-based default logger for ProjectLimitless"
                },
              ]
        401:
          description: Invalid or expired access token
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/Exception"
          examples:
            application/json:
              {
                "type": "System.MissingFie...",
                "message": "Username and password...",
                "stackTrace": "  at Limitless.Limitless...",
                "target": "ProjectLimitless..."
              }


definitions:
  Exception:
    properties:
      type:
        type: string
      message:
        type: string
      stackTrace:
        type: string
      target:
        type: string

  Login.Credentials:
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password

  Login.Response:
    properties:
      claims:
        type: array
        items:
          type: string
      userName:
        type: string
      name:
        type: string
      surname:
        type: string
      accessToken:
        type: string
      isAuthenticated:
        type: boolean
        
  APIRoute:
    properties:
      path:
        type: string
      method:
        type: string
      description:
        type: string
      requiresAuthentication:
        type: boolean
        
  IModule:
    properties:
      type:
        type: string
      title:
        type: string 
      author:
        type: string
      version:
        type: string
      description:
        type: string
        